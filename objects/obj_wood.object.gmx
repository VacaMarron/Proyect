<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wood</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>yet=true;
gridSize=32;
xSpeed=0;
ySpeed=0;
moveSpeed=2;
moveTimer=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_player){
if yet=true {
    
    if place_meeting(x,y,obj_collisionwater){
        with(instance_place(x,y,obj_collisionwater)) {
            instance_destroy();
        }
        if y==192 {
        firstWood = instance_create(x,y,obj_wood2);
        firstWood.depth=-1;
        instance_destroy();
        }
        if y&gt;192 {
        secWood = instance_create(x,y,obj_wood2);
        secWood.depth=-2;
        instance_destroy();
        }
    }        
    
    if obj_player.Looking="Right" &amp;&amp; obj_player.x==(x-32) 
        &amp;&amp; ((obj_player.y==y) || (obj_player.y==(y+32))) 
        &amp;&amp; keyboard_check(ord('A')) {
        if place_free(x+32,y) {
            yet=false
            moveTimer=gridSize;
            xSpeed=moveSpeed;
            ySpeed=0;
            }
    }
    if obj_player.Looking="Down" &amp;&amp; obj_player.y==(y-32) 
        &amp;&amp; (obj_player.x==x)
        &amp;&amp; keyboard_check(ord('A')) {
        if place_free(x,y+32) || place_meeting(x,y+32,obj_collisionwater) {
            yet=false
            moveTimer=gridSize;
            xSpeed=0;
            ySpeed=moveSpeed;
            }
    }
    if obj_player.Looking="Left" &amp;&amp; obj_player.x==(x+32) 
        &amp;&amp; ((obj_player.y==y) || (obj_player.y==(y+32))) 
        &amp;&amp; keyboard_check(ord('A')) {
        if place_free(x-32,y) {
            yet=false
            moveTimer=gridSize;
            xSpeed=-moveSpeed;
            ySpeed=0;
            }
    }
    if obj_player.Looking="Up" &amp;&amp; obj_player.y==(y+64) 
        &amp;&amp; (obj_player.x==x)
        &amp;&amp; keyboard_check(ord('A')) {
        if place_free(x,y-32) || place_meeting(x,y-32,obj_collisionwater) {
            yet=false
            moveTimer=gridSize;
            xSpeed=0;
            ySpeed=-moveSpeed;
            }
    }
}
if yet=false{
        x+=xSpeed;
        y+=ySpeed;
        moveTimer-=moveSpeed
        if moveTimer==0 yet=true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
