<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dog_ds</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>yet=true;
gridSize=32;
xSpeed=0;
ySpeed=0;
moveSpeed=4;
moveTimer=0;
dognowX=x
dognowY=y
tomoveX=obj_player.x
tomoveY=obj_player.y
movedX=0;
movedY=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dognowX=x;
movedX=obj_player.x
dognowY=y;
movedY=obj_player.y

if tomoveX&lt;movedX &amp;&amp; yet=true{
    yet=false
    moveTimer=gridSize;
    if (y&gt;tomoveY){
        ySpeed=-moveSpeed;
        xSpeed=0;
    }
    else if(y&lt;tomoveY) {
        ySpeed=moveSpeed;
        xSpeed=0
    }
    else if(x&lt;tomoveX){ 
        xSpeed=moveSpeed;
        ySpeed=0;
    }
    else{ 
        xSpeed=-moveSpeed;
        ySpeed=0;
    }
}
if tomoveX&gt;movedX &amp;&amp; yet=true{
    yet=false
    moveTimer=gridSize;
    if (y&gt;tomoveY){
        ySpeed=-moveSpeed;
        xSpeed=0;
    }
    else if(y&lt;tomoveY) {
        ySpeed=moveSpeed;
        xSpeed=0
    }
    else if(x&gt;tomoveX){ 
        xSpeed=-moveSpeed;
        ySpeed=0;
    }
    else {
        xSpeed=moveSpeed;
        ySpeed=0;
    }
}
if tomoveY&lt;movedY &amp;&amp; yet=true{
    yet=false
    moveTimer=gridSize;
    if (x&gt;tomoveX){
        xSpeed=-moveSpeed;
        ySpeed=0;
    }
    else if(x&lt;tomoveX) {
        xSpeed=moveSpeed;
        ySpeed=0
    }
    else if(y&lt;tomoveY){
        ySpeed=moveSpeed;
        xSpeed=0
    }
    else {
    ySpeed=-moveSpeed;
    xSpeed=0;
    }
}
if tomoveY&gt;movedY &amp;&amp; yet=true{
    yet=false
    moveTimer=gridSize;
    if (x&gt;tomoveX){
        xSpeed=-moveSpeed;
        ySpeed=0;
    }
    else if(x&lt;tomoveX) {
        xSpeed=moveSpeed;
        ySpeed=0
    }
    else if(y&gt;tomoveY){
        ySpeed=-moveSpeed;
        xSpeed=0
    }
    else {
    ySpeed=moveSpeed;
    xSpeed=0;
    }
}
    if yet=false{
    x+=xSpeed;
    y+=ySpeed;
    moveTimer-=moveSpeed
    if moveTimer==0 yet=true;
    }
tomoveX=movedX;
tomoveY=movedY;

if yet=false{
    //Sprite Walking Right
    if xSpeed&gt;0{
        sprite_index = spr_dog_rw;
        image_speed = 0.2;
    }
    //Sprite Walking Left
    if xSpeed&lt;0{
        sprite_index = spr_dog_lw;
        image_speed = 0.2;
    }
    //Sprite Walking Up
    if ySpeed&lt;0{
        sprite_index = spr_dog_uw;
        image_speed = 0.2;
    }
    //Sprite Walking Down
    if ySpeed&gt;0{
        sprite_index = spr_dog_dw;
        image_speed = 0.2;
    }
}
if yet=true{
    //Sprite Stand Right
    if xSpeed&gt;0{
        sprite_index = spr_dog_rs;
    }
    //Sprite Stand Left
    if xSpeed&lt;0{
        sprite_index = spr_dog_ls;
    }
    //Sprite Stand Up
    if ySpeed&lt;0{
        sprite_index = spr_dog_us;
    }
    //Sprite Stand Down
    if ySpeed&gt;0{
        sprite_index = spr_dog_ds;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
