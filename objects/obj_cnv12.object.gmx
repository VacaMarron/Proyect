<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//We set the variable Line
line=0;
//We set the alarms
alarm[0]=1
//Text and counts for strings
text1 = "My  kiiiiiiiingdom for a bit o cheeeeeese...#dammit..."
text2 = "For the last time...#WE DONT HAVE CHEESE!!"
text3 = "and keep screaming and I will put you out,#understood??"
text4 = "...#Meh"


count1=0;
count2=0;
count3=0;
count4=0;


ready=false;
obj_player.stopped=true;
obj_player.cambio=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Based on the value of contador, we do a thing or another
if line==1 {
    if count1&lt;string_length(text1) {
        count1+=1
        if string_char_at(text1,count1)!=" " {
            audio_play_sound(sound0,10,false);
       }
    }
}
if line==2 {
    if (count2&lt;(string_length(text2))) {
       count2+=1
       if string_char_at(text2,count2)!=" " {
            audio_play_sound(sound0,10,false);
       }
       }
}
if line==3 {
    if (count3&lt;(string_length(text3))) {
       count3+=1
       if string_char_at(text3,count3)!=" " {
            audio_play_sound(sound0,10,false);
       }
    }
}

if line==4 {
    if (count4&lt;(string_length(text4))) {
       count4+=1
       if string_char_at(text4,count4)!=" " {
            audio_play_sound(sound0,10,false);
       }
    }
}


//We create a constant bucle
alarm[0]=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_cinemabar){
    if obj_cinemabar.ready=true {
        if ready=false line+=1
        ready=true;
    }
}

//React to inputs
if (line&lt;5 &amp;&amp; keyboard_check_pressed(ord('A')) &amp;&amp; ready=true) {
    line+=1;
}

if line=0{
BarDown=instance_create(view_xview,view_yview+416,obj_cinemabar);
BarDown.up=false;
BarDown.down=true;
BarUp=instance_create(view_xview,view_yview-104,obj_cinemabar);
BarUp.up=true;
BarUp.down=false;
}

//If contador=5 we blow the object
if line==5 {
    if instance_exists(obj_cinemabar) obj_cinemabar.finished=true;
    if !instance_exists(obj_cinemabar){
        obj_player.stopped=false;
        obj_gameController.trumpcheese2=true
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//We draw one string or another depending of the value of contador.
draw_set_color(c_white);
draw_set_font(fnt_det);

if line==1 {
    draw_sprite(spr_cinemaname,0,view_xview+40,view_yview+299)
    draw_text(view_xview+42,view_yview+301,"TRUMP");
    draw_text(view_xview+20,view_yview+332,string_copy(text1,1,count1)); //We draw a string according to count1
    if count1==string_length(text1) draw_sprite(spr_textArrow,-1,view_xview+544-20,view_yview+416-20);
    }

if line==2 {
    draw_sprite(spr_cinemaname,0,view_xview+40,view_yview+299)
    draw_text(view_xview+42,view_yview+301,"BARMAN");
    draw_text(view_xview+20,view_yview+332,string_copy(text2,1,count2));
    count1=0;
    if count2==string_length(text2) draw_sprite(spr_textArrow,-1,view_xview+544-20,view_yview+416-20);
    }
    
if line==3{
    draw_sprite(spr_cinemaname,0,view_xview+40,view_yview+299)
    draw_text(view_xview+42,view_yview+301,"BARMAN");
    draw_text(view_xview+20,view_yview+332,string_copy(text3,1,count3));
    count2=0;
    if count3==string_length(text3) draw_sprite(spr_textArrow,-1,view_xview+544-20,view_yview+416-20);
    }
    
if line==4 {
    draw_sprite(spr_cinemaname,0,view_xview+40,view_yview+299)
    draw_text(view_xview+42,view_yview+301,"TRUMP");
    draw_text(view_xview+20,view_yview+332,string_copy(text4,1,count4));
    count3=0
    if count4==string_length(text4) draw_sprite(spr_textArrow,-1,view_xview+544-20,view_yview+416-20);
    }
     

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
